fn solve_puzzle() -> Result<(), String> {
    for m in 1..=8 {
        for u in 1..=8 {
            if m == u { continue; }
            for x in 1..=8 {
                if m == x || u == x { continue; }
                for a in 1..=8 {
                    if m == a || u == a || x == a { continue; }
                    for s in 1..=8 {
                        if m == s || u == s || x == s || a == s { continue; }
                        for l in 1..=8 {
                            if m == l || u == l || x == l || a == l || s == l { continue; }
                            for o in 1..=8 {
                                if m == o || u == o || x == o || a == o || s == o || l == o { continue; }
                                for n in 1..=8 {
                                    if m == n || u == n || x == n || a == n || s == n || l == n || o == n { continue; }

                                    let muxa = 1000 * m + 100 * u + 10 * x + a;
                                    let slon = 1000 * s + 100 * l + 10 * o + n;

                                    if muxa * a == slon {
                                        println!("{}{}{}{}", m, u, x, a);
                                        println!("     {}    ", a);
                                        println!("----------");
                                        println!("  {}{}{}{}", s, l, o, n);
                                        return Ok(());
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    Err("Solution not found".into())
}

fn main() {
    if let Err(err) = solve_puzzle() {
        println!("{}", err);
    }
}
